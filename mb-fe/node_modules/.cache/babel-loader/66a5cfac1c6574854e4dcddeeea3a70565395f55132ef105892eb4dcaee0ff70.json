{"ast":null,"code":"var _s = $RefreshSig$();\nimport WalletBalance from './WalletBalance';\nimport { useEffect, useState } from 'react';\nimport React from 'react';\nimport { ethers } from 'ethers';\n// import FiredGuys from '../artifacts/contracts/MyNFT.sol/MyNFT.json';\n\nconst contractAddress = 'YOUR_DEPLOYED_CONTRACT_ADDRESS';\nconst provider = new ethers.providers.Web3Provider(window.ethereum);\n\n// get the end user\nconst signer = provider.getSigner();\n\n// get the smart contract\nconst contract = new ethers.Contract(contractAddress, FiredGuys.abi, signer);\nfunction Home() {\n  _s();\n  const [totalMinted, setTotalMinted] = useState(0);\n  useEffect(() => {\n    getCount();\n  }, []);\n  const getCount = async () => {\n    const count = await contract.count();\n    console.log(parseInt(count));\n    setTotalMinted(parseInt(count));\n  };\n  return /*#__PURE__*/React.createElement('div', null, /*#__PURE__*/React.createElement(WalletBalance, null), Array(totalMinted + 1).fill(0).map((_, i) => /*#__PURE__*/React.createElement('div', {\n    key: i\n  }, /*#__PURE__*/React.createElement(NFTImage, {\n    tokenId: i,\n    getCount: getCount\n  }))));\n}\n_s(Home, \"yOFXLBAC6K9F8DYBqLzJV/2kpHo=\");\n_c = Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["WalletBalance","useEffect","useState","React","ethers","contractAddress","provider","providers","Web3Provider","window","ethereum","signer","getSigner","contract","Contract","FiredGuys","abi","Home","_s","totalMinted","setTotalMinted","getCount","count","console","log","parseInt","createElement","Array","fill","map","_","i","key","NFTImage","tokenId","_c","$RefreshReg$"],"sources":["/home/ha/Downloads/programs/25-10/MB-NFT/mb-fe/src/components/Home.js"],"sourcesContent":["import WalletBalance from './WalletBalance';\nimport { useEffect, useState } from 'react';\nimport React from 'react';\nimport { ethers } from 'ethers';\n// import FiredGuys from '../artifacts/contracts/MyNFT.sol/MyNFT.json';\n\nconst contractAddress = 'YOUR_DEPLOYED_CONTRACT_ADDRESS';\n\nconst provider = new ethers.providers.Web3Provider(window.ethereum);\n\n// get the end user\nconst signer = provider.getSigner();\n\n// get the smart contract\nconst contract = new ethers.Contract(contractAddress, FiredGuys.abi, signer);\n\nfunction Home() {\n\n  const [totalMinted, setTotalMinted] = useState(0);\n  useEffect(() => {\n    getCount();\n  }, []);\n\n  const getCount = async () => {\n    const count = await contract.count();\n    console.log(parseInt(count));\n    setTotalMinted(parseInt(count));\n  };\n\n  return React.createElement(\n    'div',\n    null,\n    React.createElement(WalletBalance, null),\n    Array(totalMinted + 1).fill(0).map((_, i) => React.createElement(\n      'div',\n      { key: i },\n      React.createElement(NFTImage, { tokenId: i, getCount: getCount })\n    ))\n  );\n}\n\n"],"mappings":";AAAA,OAAOA,aAAa,MAAM,iBAAiB;AAC3C,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,QAAQ;AAC/B;;AAEA,MAAMC,eAAe,GAAG,gCAAgC;AAExD,MAAMC,QAAQ,GAAG,IAAIF,MAAM,CAACG,SAAS,CAACC,YAAY,CAACC,MAAM,CAACC,QAAQ,CAAC;;AAEnE;AACA,MAAMC,MAAM,GAAGL,QAAQ,CAACM,SAAS,CAAC,CAAC;;AAEnC;AACA,MAAMC,QAAQ,GAAG,IAAIT,MAAM,CAACU,QAAQ,CAACT,eAAe,EAAEU,SAAS,CAACC,GAAG,EAAEL,MAAM,CAAC;AAE5E,SAASM,IAAIA,CAAA,EAAG;EAAAC,EAAA;EAEd,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGlB,QAAQ,CAAC,CAAC,CAAC;EACjDD,SAAS,CAAC,MAAM;IACdoB,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,QAAQ,GAAG,MAAAA,CAAA,KAAY;IAC3B,MAAMC,KAAK,GAAG,MAAMT,QAAQ,CAACS,KAAK,CAAC,CAAC;IACpCC,OAAO,CAACC,GAAG,CAACC,QAAQ,CAACH,KAAK,CAAC,CAAC;IAC5BF,cAAc,CAACK,QAAQ,CAACH,KAAK,CAAC,CAAC;EACjC,CAAC;EAED,oBAAOnB,KAAK,CAACuB,aAAa,CACxB,KAAK,EACL,IAAI,eACJvB,KAAK,CAACuB,aAAa,CAAC1B,aAAa,EAAE,IAAI,CAAC,EACxC2B,KAAK,CAACR,WAAW,GAAG,CAAC,CAAC,CAACS,IAAI,CAAC,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,kBAAK5B,KAAK,CAACuB,aAAa,CAC9D,KAAK,EACL;IAAEM,GAAG,EAAED;EAAE,CAAC,eACV5B,KAAK,CAACuB,aAAa,CAACO,QAAQ,EAAE;IAAEC,OAAO,EAAEH,CAAC;IAAEV,QAAQ,EAAEA;EAAS,CAAC,CAClE,CAAC,CACH,CAAC;AACH;AAACH,EAAA,CAvBQD,IAAI;AAAAkB,EAAA,GAAJlB,IAAI;AAAA,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}